@inject PortifolioServices service

<div class="card-style mb-30">
    <div class="table-wrapper table-responsive">
        <table class="table striped-table">
            <thead>
                <tr>
                    <th class="mr-5"></th>
                    <th>Url</th>
                    <th>UrlGitHub</th>
                    <th>Imagem</th>
                    <th></th>
                </tr>
            </thead>
            <tbody>
                @foreach (var item in Items)
                {
                    <tr>
                        <td>@(++count)</td>
                        <td>@item.Url</td>
                        <td>@item.UrlGitHub</td>
                        <td>@item.Image</td>
                        <td>
                            <button @onclick="@(e => OnClickeEditBtn(item.Id))"
                                class="btn btn-outline-warning">Editar</button>
                        </td>
                    </tr>
                }
            </tbody>
        </table>
    </div>
</div>

@code {
    [Parameter]
    public List<PortifolioItem> Items { get; set; } = new List<PortifolioItem>();

    [Parameter]
    public EventCallback<PortifolioItem> OnEdit { get; set; }

    int count = 0;

    protected override void OnParametersSet()
    {
        count = 0;
    }

    async Task OnClickeEditBtn(int id)
    {
        PortifolioItem modelEdit = await service.GetDataById(id);

        await OnEdit.InvokeAsync(modelEdit);
    }

}
